/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev at Thu Oct  3 21:52:45 2024. */

#ifndef PB_DINOLABS_APP_PROTO_PAYLOAD_PB_H_INCLUDED
#define PB_DINOLABS_APP_PROTO_PAYLOAD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum dinolabs_versions {
    DINOLABS_VERSIONS_VERSION_UNKNOWN = 0,
    DINOLABS_VERSIONS_VERSION_1 = 1
} dinolabs_versions_t;

/* Struct definitions */
typedef struct dinolabs_power_board {
    uint16_t v_battery;
    int16_t i_battery;
    uint16_t v_charge_input; /* BMS input side voltage (PCB: VChrg) */
    uint16_t v_rail_12_v;
    int16_t i_rail_12_v;
    uint16_t v_rail_5_v;
    int16_t i_rail_5_v;
    uint16_t v_rail_3_v3;
    int16_t i_rail_3_v3;
    uint16_t power_state; /* power good and charge source */
} dinolabs_power_board_t;

typedef struct dinolabs_experiment_sensor {
    uint32_t average_raw_optical_power; /* nW/cm2 */
    uint32_t photodiode_voltage;
} dinolabs_experiment_sensor_t;

typedef struct dinolabs_experiment_board {
    uint8_t board_id;
    /* repeated ExperimentSensor sensors = 2; */
    pb_size_t sensors_count;
    dinolabs_experiment_sensor_t sensors[4];
} dinolabs_experiment_board_t;

typedef struct dinolabs_tec {
    uint16_t tec_voltage;
    int16_t tec_current;
} dinolabs_tec_t;

typedef struct dinolabs_fan {
    uint16_t fan_voltage;
    int16_t fan_current;
} dinolabs_fan_t;

typedef struct dinolabs_cooling_system {
    bool has_top_tec;
    dinolabs_tec_t top_tec;
    bool has_bottom_tec;
    dinolabs_tec_t bottom_tec; /* Fan fan = 3; */
    int16_t temp_top_cool_side;
    int16_t temp_bottom_cool_side;
    int16_t temp_hot_side;
} dinolabs_cooling_system_t;

typedef struct dinolabs_imu {
    int16_t acc_x;
    int16_t acc_y;
    int16_t acc_z;
    int16_t gyro_x;
    int16_t gyro_y;
    int16_t gyro_z;
} dinolabs_imu_t;

typedef struct dinolabs_system_state {
    /* TODO: maybe change states to defined enums */
    uint8_t current_payload_state; /* tbd */
    uint8_t last_fcs_state; /* echo back last received state from Rocketry FCS */
    uint16_t raw_error_count;
    uint16_t cpu_usage;
    uint16_t storage_capacity;
    bool has_imu;
    dinolabs_imu_t imu;
} dinolabs_system_state_t;

/* main trasaction message */
typedef struct dinolabs_payload_pacakge {
    uint64_t timestamp;
    pb_size_t which_payload;
    union {
        dinolabs_power_board_t power_state;
        dinolabs_experiment_board_t experiement_state;
        dinolabs_cooling_system_t cooling_state;
        dinolabs_system_state_t system_status;
    } payload;
} dinolabs_payload_pacakge_t;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _DINOLABS_VERSIONS_MIN DINOLABS_VERSIONS_VERSION_UNKNOWN
#define _DINOLABS_VERSIONS_MAX DINOLABS_VERSIONS_VERSION_1
#define _DINOLABS_VERSIONS_ARRAYSIZE ((dinolabs_versions_t)(DINOLABS_VERSIONS_VERSION_1+1))











/* Initializer values for message structs */
#define DINOLABS_PAYLOAD_PACAKGE_INIT_DEFAULT    {0, 0, {DINOLABS_POWER_BOARD_INIT_DEFAULT}}
#define DINOLABS_POWER_BOARD_INIT_DEFAULT        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define DINOLABS_EXPERIMENT_SENSOR_INIT_DEFAULT  {0, 0}
#define DINOLABS_EXPERIMENT_BOARD_INIT_DEFAULT   {0, 0, {DINOLABS_EXPERIMENT_SENSOR_INIT_DEFAULT, DINOLABS_EXPERIMENT_SENSOR_INIT_DEFAULT, DINOLABS_EXPERIMENT_SENSOR_INIT_DEFAULT, DINOLABS_EXPERIMENT_SENSOR_INIT_DEFAULT}}
#define DINOLABS_TEC_INIT_DEFAULT                {0, 0}
#define DINOLABS_FAN_INIT_DEFAULT                {0, 0}
#define DINOLABS_COOLING_SYSTEM_INIT_DEFAULT     {false, DINOLABS_TEC_INIT_DEFAULT, false, DINOLABS_TEC_INIT_DEFAULT, 0, 0, 0}
#define DINOLABS_IMU_INIT_DEFAULT                {0, 0, 0, 0, 0, 0}
#define DINOLABS_SYSTEM_STATE_INIT_DEFAULT       {0, 0, 0, 0, 0, false, DINOLABS_IMU_INIT_DEFAULT}
#define DINOLABS_PAYLOAD_PACAKGE_INIT_ZERO       {0, 0, {DINOLABS_POWER_BOARD_INIT_ZERO}}
#define DINOLABS_POWER_BOARD_INIT_ZERO           {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define DINOLABS_EXPERIMENT_SENSOR_INIT_ZERO     {0, 0}
#define DINOLABS_EXPERIMENT_BOARD_INIT_ZERO      {0, 0, {DINOLABS_EXPERIMENT_SENSOR_INIT_ZERO, DINOLABS_EXPERIMENT_SENSOR_INIT_ZERO, DINOLABS_EXPERIMENT_SENSOR_INIT_ZERO, DINOLABS_EXPERIMENT_SENSOR_INIT_ZERO}}
#define DINOLABS_TEC_INIT_ZERO                   {0, 0}
#define DINOLABS_FAN_INIT_ZERO                   {0, 0}
#define DINOLABS_COOLING_SYSTEM_INIT_ZERO        {false, DINOLABS_TEC_INIT_ZERO, false, DINOLABS_TEC_INIT_ZERO, 0, 0, 0}
#define DINOLABS_IMU_INIT_ZERO                   {0, 0, 0, 0, 0, 0}
#define DINOLABS_SYSTEM_STATE_INIT_ZERO          {0, 0, 0, 0, 0, false, DINOLABS_IMU_INIT_ZERO}

/* Field tags (for use in manual encoding/decoding) */
#define DINOLABS_POWER_BOARD_V_BATTERY_TAG       1
#define DINOLABS_POWER_BOARD_I_BATTERY_TAG       2
#define DINOLABS_POWER_BOARD_V_CHARGE_INPUT_TAG  3
#define DINOLABS_POWER_BOARD_V_RAIL_12_V_TAG     6
#define DINOLABS_POWER_BOARD_I_RAIL_12_V_TAG     7
#define DINOLABS_POWER_BOARD_V_RAIL_5_V_TAG      8
#define DINOLABS_POWER_BOARD_I_RAIL_5_V_TAG      9
#define DINOLABS_POWER_BOARD_V_RAIL_3_V3_TAG     10
#define DINOLABS_POWER_BOARD_I_RAIL_3_V3_TAG     11
#define DINOLABS_POWER_BOARD_POWER_STATE_TAG     12
#define DINOLABS_EXPERIMENT_SENSOR_AVERAGE_RAW_OPTICAL_POWER_TAG 1
#define DINOLABS_EXPERIMENT_SENSOR_PHOTODIODE_VOLTAGE_TAG 2
#define DINOLABS_EXPERIMENT_BOARD_BOARD_ID_TAG   1
#define DINOLABS_EXPERIMENT_BOARD_SENSORS_TAG    2
#define DINOLABS_TEC_TEC_VOLTAGE_TAG             1
#define DINOLABS_TEC_TEC_CURRENT_TAG             2
#define DINOLABS_FAN_FAN_VOLTAGE_TAG             1
#define DINOLABS_FAN_FAN_CURRENT_TAG             2
#define DINOLABS_COOLING_SYSTEM_TOP_TEC_TAG      1
#define DINOLABS_COOLING_SYSTEM_BOTTOM_TEC_TAG   2
#define DINOLABS_COOLING_SYSTEM_TEMP_TOP_COOL_SIDE_TAG 4
#define DINOLABS_COOLING_SYSTEM_TEMP_BOTTOM_COOL_SIDE_TAG 5
#define DINOLABS_COOLING_SYSTEM_TEMP_HOT_SIDE_TAG 6
#define DINOLABS_IMU_ACC_X_TAG                   1
#define DINOLABS_IMU_ACC_Y_TAG                   2
#define DINOLABS_IMU_ACC_Z_TAG                   3
#define DINOLABS_IMU_GYRO_X_TAG                  4
#define DINOLABS_IMU_GYRO_Y_TAG                  5
#define DINOLABS_IMU_GYRO_Z_TAG                  6
#define DINOLABS_SYSTEM_STATE_CURRENT_PAYLOAD_STATE_TAG 1
#define DINOLABS_SYSTEM_STATE_LAST_FCS_STATE_TAG 2
#define DINOLABS_SYSTEM_STATE_RAW_ERROR_COUNT_TAG 3
#define DINOLABS_SYSTEM_STATE_CPU_USAGE_TAG      4
#define DINOLABS_SYSTEM_STATE_STORAGE_CAPACITY_TAG 5
#define DINOLABS_SYSTEM_STATE_IMU_TAG            6
#define DINOLABS_PAYLOAD_PACAKGE_TIMESTAMP_TAG   3
#define DINOLABS_PAYLOAD_PACAKGE_POWER_STATE_TAG 4
#define DINOLABS_PAYLOAD_PACAKGE_EXPERIEMENT_STATE_TAG 5
#define DINOLABS_PAYLOAD_PACAKGE_COOLING_STATE_TAG 6
#define DINOLABS_PAYLOAD_PACAKGE_SYSTEM_STATUS_TAG 7

/* Struct field encoding specification for nanopb */
#define DINOLABS_PAYLOAD_PACAKGE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,power_state,payload.power_state),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,experiement_state,payload.experiement_state),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,cooling_state,payload.cooling_state),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,system_status,payload.system_status),   7)
#define DINOLABS_PAYLOAD_PACAKGE_CALLBACK NULL
#define DINOLABS_PAYLOAD_PACAKGE_DEFAULT NULL
#define dinolabs_payload_pacakge_t_payload_power_state_MSGTYPE dinolabs_power_board_t
#define dinolabs_payload_pacakge_t_payload_experiement_state_MSGTYPE dinolabs_experiment_board_t
#define dinolabs_payload_pacakge_t_payload_cooling_state_MSGTYPE dinolabs_cooling_system_t
#define dinolabs_payload_pacakge_t_payload_system_status_MSGTYPE dinolabs_system_state_t

#define DINOLABS_POWER_BOARD_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   v_battery,         1) \
X(a, STATIC,   SINGULAR, INT32,    i_battery,         2) \
X(a, STATIC,   SINGULAR, UINT32,   v_charge_input,    3) \
X(a, STATIC,   SINGULAR, UINT32,   v_rail_12_v,       6) \
X(a, STATIC,   SINGULAR, INT32,    i_rail_12_v,       7) \
X(a, STATIC,   SINGULAR, UINT32,   v_rail_5_v,        8) \
X(a, STATIC,   SINGULAR, INT32,    i_rail_5_v,        9) \
X(a, STATIC,   SINGULAR, UINT32,   v_rail_3_v3,      10) \
X(a, STATIC,   SINGULAR, INT32,    i_rail_3_v3,      11) \
X(a, STATIC,   SINGULAR, UINT32,   power_state,      12)
#define DINOLABS_POWER_BOARD_CALLBACK NULL
#define DINOLABS_POWER_BOARD_DEFAULT NULL

#define DINOLABS_EXPERIMENT_SENSOR_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   average_raw_optical_power,   1) \
X(a, STATIC,   SINGULAR, UINT32,   photodiode_voltage,   2)
#define DINOLABS_EXPERIMENT_SENSOR_CALLBACK NULL
#define DINOLABS_EXPERIMENT_SENSOR_DEFAULT NULL

#define DINOLABS_EXPERIMENT_BOARD_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   board_id,          1) \
X(a, STATIC,   REPEATED, MESSAGE,  sensors,           2)
#define DINOLABS_EXPERIMENT_BOARD_CALLBACK NULL
#define DINOLABS_EXPERIMENT_BOARD_DEFAULT NULL
#define dinolabs_experiment_board_t_sensors_MSGTYPE dinolabs_experiment_sensor_t

#define DINOLABS_TEC_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   tec_voltage,       1) \
X(a, STATIC,   SINGULAR, INT32,    tec_current,       2)
#define DINOLABS_TEC_CALLBACK NULL
#define DINOLABS_TEC_DEFAULT NULL

#define DINOLABS_FAN_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   fan_voltage,       1) \
X(a, STATIC,   SINGULAR, INT32,    fan_current,       2)
#define DINOLABS_FAN_CALLBACK NULL
#define DINOLABS_FAN_DEFAULT NULL

#define DINOLABS_COOLING_SYSTEM_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  top_tec,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bottom_tec,        2) \
X(a, STATIC,   SINGULAR, INT32,    temp_top_cool_side,   4) \
X(a, STATIC,   SINGULAR, INT32,    temp_bottom_cool_side,   5) \
X(a, STATIC,   SINGULAR, INT32,    temp_hot_side,     6)
#define DINOLABS_COOLING_SYSTEM_CALLBACK NULL
#define DINOLABS_COOLING_SYSTEM_DEFAULT NULL
#define dinolabs_cooling_system_t_top_tec_MSGTYPE dinolabs_tec_t
#define dinolabs_cooling_system_t_bottom_tec_MSGTYPE dinolabs_tec_t

#define DINOLABS_IMU_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    acc_x,             1) \
X(a, STATIC,   SINGULAR, INT32,    acc_y,             2) \
X(a, STATIC,   SINGULAR, INT32,    acc_z,             3) \
X(a, STATIC,   SINGULAR, INT32,    gyro_x,            4) \
X(a, STATIC,   SINGULAR, INT32,    gyro_y,            5) \
X(a, STATIC,   SINGULAR, INT32,    gyro_z,            6)
#define DINOLABS_IMU_CALLBACK NULL
#define DINOLABS_IMU_DEFAULT NULL

#define DINOLABS_SYSTEM_STATE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   current_payload_state,   1) \
X(a, STATIC,   SINGULAR, UINT32,   last_fcs_state,    2) \
X(a, STATIC,   SINGULAR, UINT32,   raw_error_count,   3) \
X(a, STATIC,   SINGULAR, UINT32,   cpu_usage,         4) \
X(a, STATIC,   SINGULAR, UINT32,   storage_capacity,   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  imu,               6)
#define DINOLABS_SYSTEM_STATE_CALLBACK NULL
#define DINOLABS_SYSTEM_STATE_DEFAULT NULL
#define dinolabs_system_state_t_imu_MSGTYPE dinolabs_imu_t

extern const pb_msgdesc_t dinolabs_payload_pacakge_t_msg;
extern const pb_msgdesc_t dinolabs_power_board_t_msg;
extern const pb_msgdesc_t dinolabs_experiment_sensor_t_msg;
extern const pb_msgdesc_t dinolabs_experiment_board_t_msg;
extern const pb_msgdesc_t dinolabs_tec_t_msg;
extern const pb_msgdesc_t dinolabs_fan_t_msg;
extern const pb_msgdesc_t dinolabs_cooling_system_t_msg;
extern const pb_msgdesc_t dinolabs_imu_t_msg;
extern const pb_msgdesc_t dinolabs_system_state_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DINOLABS_PAYLOAD_PACAKGE_FIELDS &dinolabs_payload_pacakge_t_msg
#define DINOLABS_POWER_BOARD_FIELDS &dinolabs_power_board_t_msg
#define DINOLABS_EXPERIMENT_SENSOR_FIELDS &dinolabs_experiment_sensor_t_msg
#define DINOLABS_EXPERIMENT_BOARD_FIELDS &dinolabs_experiment_board_t_msg
#define DINOLABS_TEC_FIELDS &dinolabs_tec_t_msg
#define DINOLABS_FAN_FIELDS &dinolabs_fan_t_msg
#define DINOLABS_COOLING_SYSTEM_FIELDS &dinolabs_cooling_system_t_msg
#define DINOLABS_IMU_FIELDS &dinolabs_imu_t_msg
#define DINOLABS_SYSTEM_STATE_FIELDS &dinolabs_system_state_t_msg

/* Maximum encoded size of messages (where known) */
#define DINOLABS_APP_PROTO_PAYLOAD_PB_H_MAX_SIZE DINOLABS_PAYLOAD_PACAKGE_SIZE
#define DINOLABS_COOLING_SYSTEM_SIZE             67
#define DINOLABS_EXPERIMENT_BOARD_SIZE           59
#define DINOLABS_EXPERIMENT_SENSOR_SIZE          12
#define DINOLABS_FAN_SIZE                        15
#define DINOLABS_IMU_SIZE                        66
#define DINOLABS_PAYLOAD_PACAKGE_SIZE            99
#define DINOLABS_POWER_BOARD_SIZE                68
#define DINOLABS_SYSTEM_STATE_SIZE               86
#define DINOLABS_TEC_SIZE                        15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
